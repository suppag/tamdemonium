{"version":3,"sources":["webpack:///node_modules/patternomaly/dist/patternomaly.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA,CAAC,qBAAqB;;AAEtB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA,WAAW;AACX,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;;AAEA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA,iBAAiB,sBAAsB;AACvC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,CAAC;;AAED;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA,CAAC;;AAED;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA,CAAC;;AAED;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA,CAAC;;AAED;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA,CAAC;;AAED;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA,CAAC;;AAED;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA,CAAC;;AAED;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA,CAAC;;AAED;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA,CAAC;;AAED;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA,CAAC;;AAED;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA,CAAC;;AAED;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA,CAAC;;AAED;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,CAAC;;AAED;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA,CAAC;;AAED;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA,CAAC;;AAED;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA,CAAC;;AAED;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA,CAAC;;AAED;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA,CAAC;;AAED;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA,CAAC;;AAED;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA,CAAC;;AAED;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA,CAAC;;AAED;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,CAAC;AACD","file":"scripts.js","sourcesContent":["(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global.pattern = factory());\n}(this, (function () { 'use strict';\n\nvar BACKGROUND_COLOR = 'rgba(100, 100, 100, 0.7)';\nvar PATTERN_COLOR = 'rgba(255, 255, 255, 0.8)';\nvar POINT_STYLE = 'round';\n\nvar asyncGenerator = function () {\n  function AwaitValue(value) {\n    this.value = value;\n  }\n\n  function AsyncGenerator(gen) {\n    var front, back;\n\n    function send(key, arg) {\n      return new Promise(function (resolve, reject) {\n        var request = {\n          key: key,\n          arg: arg,\n          resolve: resolve,\n          reject: reject,\n          next: null\n        };\n\n        if (back) {\n          back = back.next = request;\n        } else {\n          front = back = request;\n          resume(key, arg);\n        }\n      });\n    }\n\n    function resume(key, arg) {\n      try {\n        var result = gen[key](arg);\n        var value = result.value;\n\n        if (value instanceof AwaitValue) {\n          Promise.resolve(value.value).then(function (arg) {\n            resume(\"next\", arg);\n          }, function (arg) {\n            resume(\"throw\", arg);\n          });\n        } else {\n          settle(result.done ? \"return\" : \"normal\", result.value);\n        }\n      } catch (err) {\n        settle(\"throw\", err);\n      }\n    }\n\n    function settle(type, value) {\n      switch (type) {\n        case \"return\":\n          front.resolve({\n            value: value,\n            done: true\n          });\n          break;\n\n        case \"throw\":\n          front.reject(value);\n          break;\n\n        default:\n          front.resolve({\n            value: value,\n            done: false\n          });\n          break;\n      }\n\n      front = front.next;\n\n      if (front) {\n        resume(front.key, front.arg);\n      } else {\n        back = null;\n      }\n    }\n\n    this._invoke = send;\n\n    if (typeof gen.return !== \"function\") {\n      this.return = undefined;\n    }\n  }\n\n  if (typeof Symbol === \"function\" && Symbol.asyncIterator) {\n    AsyncGenerator.prototype[Symbol.asyncIterator] = function () {\n      return this;\n    };\n  }\n\n  AsyncGenerator.prototype.next = function (arg) {\n    return this._invoke(\"next\", arg);\n  };\n\n  AsyncGenerator.prototype.throw = function (arg) {\n    return this._invoke(\"throw\", arg);\n  };\n\n  AsyncGenerator.prototype.return = function (arg) {\n    return this._invoke(\"return\", arg);\n  };\n\n  return {\n    wrap: function (fn) {\n      return function () {\n        return new AsyncGenerator(fn.apply(this, arguments));\n      };\n    },\n    await: function (value) {\n      return new AwaitValue(value);\n    }\n  };\n}();\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar inherits = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\nvar possibleConstructorReturn = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\nvar Shape = function () {\n  function Shape() {\n    var size = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 20;\n    var backgroundColor = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : BACKGROUND_COLOR;\n    var patternColor = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : PATTERN_COLOR;\n    classCallCheck(this, Shape);\n\n    this._canvas = document.createElement('canvas');\n    this._context = this._canvas.getContext('2d');\n\n    this._canvas.width = size;\n    this._canvas.height = size;\n\n    this._context.fillStyle = backgroundColor;\n    this._context.fillRect(0, 0, this._canvas.width, this._canvas.height);\n\n    this._size = size;\n    this._patternColor = patternColor;\n\n    return this;\n  }\n\n  createClass(Shape, [{\n    key: 'setStrokeProps',\n    value: function setStrokeProps() {\n      this._context.strokeStyle = this._patternColor;\n      this._context.lineWidth = this._size / 10;\n      this._context.lineJoin = POINT_STYLE;\n      this._context.lineCap = POINT_STYLE;\n    }\n  }, {\n    key: 'setFillProps',\n    value: function setFillProps() {\n      this._context.fillStyle = this._patternColor;\n    }\n  }]);\n  return Shape;\n}();\n\nvar Plus = function (_Shape) {\n  inherits(Plus, _Shape);\n\n  function Plus() {\n    classCallCheck(this, Plus);\n    return possibleConstructorReturn(this, (Plus.__proto__ || Object.getPrototypeOf(Plus)).apply(this, arguments));\n  }\n\n  createClass(Plus, [{\n    key: 'drawTile',\n    value: function drawTile() {\n      var halfSize = this._size / 2;\n\n      this._context.beginPath();\n\n      this.setStrokeProps();\n\n      this.drawPlus();\n      this.drawPlus(halfSize, halfSize);\n\n      this._context.stroke();\n\n      return this._canvas;\n    }\n  }, {\n    key: 'drawPlus',\n    value: function drawPlus() {\n      var offsetX = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      var offsetY = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      var size = this._size;\n      var halfSize = size / 2;\n      var quarterSize = size / 4;\n\n      this._context.moveTo(quarterSize + offsetX, 0 + offsetY);\n      this._context.lineTo(quarterSize + offsetX, halfSize + offsetY);\n      this._context.moveTo(0 + offsetX, quarterSize + offsetY);\n      this._context.lineTo(halfSize + offsetX, quarterSize + offsetY);\n\n      this._context.closePath();\n    }\n  }]);\n  return Plus;\n}(Shape);\n\nvar Cross = function (_Shape) {\n  inherits(Cross, _Shape);\n\n  function Cross() {\n    classCallCheck(this, Cross);\n    return possibleConstructorReturn(this, (Cross.__proto__ || Object.getPrototypeOf(Cross)).apply(this, arguments));\n  }\n\n  createClass(Cross, [{\n    key: 'drawTile',\n    value: function drawTile() {\n      var halfSize = this._size / 2;\n\n      this._context.beginPath();\n\n      this.setStrokeProps();\n\n      this.drawCross();\n      this.drawCross(halfSize, halfSize);\n\n      this._context.stroke();\n\n      return this._canvas;\n    }\n  }, {\n    key: 'drawCross',\n    value: function drawCross() {\n      var offsetX = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      var offsetY = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      var size = this._size;\n      var halfSize = size / 2;\n      var gap = 2;\n\n      this._context.moveTo(offsetX + gap, offsetY + gap);\n      this._context.lineTo(halfSize - gap + offsetX, halfSize - gap + offsetY);\n      this._context.moveTo(offsetX + gap, halfSize - gap + offsetY);\n      this._context.lineTo(halfSize - gap + offsetX, offsetY + gap);\n\n      this._context.closePath();\n    }\n  }]);\n  return Cross;\n}(Shape);\n\nvar Dash = function (_Shape) {\n  inherits(Dash, _Shape);\n\n  function Dash() {\n    classCallCheck(this, Dash);\n    return possibleConstructorReturn(this, (Dash.__proto__ || Object.getPrototypeOf(Dash)).apply(this, arguments));\n  }\n\n  createClass(Dash, [{\n    key: 'drawTile',\n    value: function drawTile() {\n      var halfSize = this._size / 2;\n\n      this._context.beginPath();\n\n      this.setStrokeProps();\n\n      this.drawDash();\n      this.drawDash(halfSize, halfSize);\n\n      this._context.stroke();\n\n      return this._canvas;\n    }\n  }, {\n    key: 'drawDash',\n    value: function drawDash() {\n      var offsetX = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      var offsetY = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      var size = this._size;\n      var halfSize = size / 2;\n      var gap = 2;\n\n      this._context.moveTo(offsetX + gap, offsetY + gap);\n      this._context.lineTo(halfSize - gap + offsetX, halfSize - gap + offsetY);\n\n      this._context.closePath();\n    }\n  }]);\n  return Dash;\n}(Shape);\n\nvar CrossDash = function (_Shape) {\n  inherits(CrossDash, _Shape);\n\n  function CrossDash() {\n    classCallCheck(this, CrossDash);\n    return possibleConstructorReturn(this, (CrossDash.__proto__ || Object.getPrototypeOf(CrossDash)).apply(this, arguments));\n  }\n\n  createClass(CrossDash, [{\n    key: 'drawTile',\n    value: function drawTile() {\n      var halfSize = this._size / 2;\n      this._context.beginPath();\n\n      this.setStrokeProps();\n\n      var cross = new Cross();\n      cross.drawCross.call(this);\n\n      var dash = new Dash();\n      dash.drawDash.call(this, halfSize, halfSize);\n\n      this._context.stroke();\n\n      return this._canvas;\n    }\n  }]);\n  return CrossDash;\n}(Shape);\n\nvar Dot = function (_Shape) {\n  inherits(Dot, _Shape);\n\n  function Dot() {\n    classCallCheck(this, Dot);\n    return possibleConstructorReturn(this, (Dot.__proto__ || Object.getPrototypeOf(Dot)).apply(this, arguments));\n  }\n\n  createClass(Dot, [{\n    key: 'drawTile',\n    value: function drawTile() {\n      var halfSize = this._size / 2;\n\n      this._context.beginPath();\n\n      this.setFillProps();\n\n      this.drawDot();\n      this.drawDot(halfSize, halfSize);\n\n      this._context.fill();\n\n      return this._canvas;\n    }\n  }, {\n    key: 'drawDot',\n    value: function drawDot() {\n      var offsetX = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      var offsetY = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      var diameter = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this._size / 10;\n\n      var size = this._size;\n      var quarterSize = size / 4;\n      var x = quarterSize + offsetX;\n      var y = quarterSize + offsetY;\n\n      this._context.moveTo(x + quarterSize, y);\n      this._context.arc(x, y, diameter, 0, 2 * Math.PI);\n\n      this._context.closePath();\n    }\n  }]);\n  return Dot;\n}(Shape);\n\nvar DotDash = function (_Shape) {\n  inherits(DotDash, _Shape);\n\n  function DotDash() {\n    classCallCheck(this, DotDash);\n    return possibleConstructorReturn(this, (DotDash.__proto__ || Object.getPrototypeOf(DotDash)).apply(this, arguments));\n  }\n\n  createClass(DotDash, [{\n    key: 'drawTile',\n    value: function drawTile() {\n      var halfSize = this._size / 2;\n\n      this._context.beginPath();\n\n      this.setStrokeProps();\n\n      var dash = new Dash();\n      dash.drawDash.call(this, halfSize, halfSize);\n\n      this._context.closePath();\n      this._context.stroke();\n\n      this.setFillProps();\n\n      var dot = new Dot();\n      dot.drawDot.call(this);\n\n      this._context.fill();\n\n      return this._canvas;\n    }\n  }]);\n  return DotDash;\n}(Shape);\n\nvar Disc = function (_Dot) {\n  inherits(Disc, _Dot);\n\n  function Disc() {\n    classCallCheck(this, Disc);\n    return possibleConstructorReturn(this, (Disc.__proto__ || Object.getPrototypeOf(Disc)).apply(this, arguments));\n  }\n\n  createClass(Disc, [{\n    key: 'drawTile',\n    value: function drawTile() {\n      var halfSize = this._size / 2;\n      var diameter = this._size / 5;\n\n      this._context.beginPath();\n\n      this.setFillProps();\n\n      this.drawDot(0, 0, diameter);\n      this.drawDot(halfSize, halfSize, diameter);\n\n      this._context.fill();\n\n      return this._canvas;\n    }\n  }]);\n  return Disc;\n}(Dot);\n\nvar Ring = function (_Dot) {\n  inherits(Ring, _Dot);\n\n  function Ring() {\n    classCallCheck(this, Ring);\n    return possibleConstructorReturn(this, (Ring.__proto__ || Object.getPrototypeOf(Ring)).apply(this, arguments));\n  }\n\n  createClass(Ring, [{\n    key: 'drawTile',\n    value: function drawTile() {\n      var halfSize = this._size / 2;\n      var diameter = this._size / 5;\n\n      this._context.beginPath();\n\n      this.setStrokeProps();\n\n      this.drawDot(0, 0, diameter);\n      this.drawDot(halfSize, halfSize, diameter);\n\n      this._context.stroke();\n\n      return this._canvas;\n    }\n  }]);\n  return Ring;\n}(Dot);\n\nvar Line = function (_Shape) {\n  inherits(Line, _Shape);\n\n  function Line() {\n    classCallCheck(this, Line);\n    return possibleConstructorReturn(this, (Line.__proto__ || Object.getPrototypeOf(Line)).apply(this, arguments));\n  }\n\n  createClass(Line, [{\n    key: 'drawTile',\n    value: function drawTile() {\n      var halfSize = this._size / 2;\n\n      this._context.beginPath();\n\n      this.setStrokeProps();\n\n      this.drawLine();\n      this.drawLine(halfSize, halfSize);\n\n      this._context.stroke();\n\n      return this._canvas;\n    }\n  }, {\n    key: 'drawLine',\n    value: function drawLine() {\n      var offsetX = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      var offsetY = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      var size = this._size;\n      var quarterSize = size / 4;\n\n      this._context.moveTo(0, quarterSize + offsetY);\n      this._context.lineTo(this._size, quarterSize + offsetY);\n\n      this._context.closePath();\n    }\n  }]);\n  return Line;\n}(Shape);\n\nvar VerticalLine = function (_Line) {\n  inherits(VerticalLine, _Line);\n\n  function VerticalLine() {\n    classCallCheck(this, VerticalLine);\n    return possibleConstructorReturn(this, (VerticalLine.__proto__ || Object.getPrototypeOf(VerticalLine)).apply(this, arguments));\n  }\n\n  createClass(VerticalLine, [{\n    key: 'drawTile',\n    value: function drawTile() {\n      this._context.translate(this._size, 0);\n      this._context.rotate(90 * Math.PI / 180);\n\n      Line.prototype.drawTile.call(this);\n\n      return this._canvas;\n    }\n  }]);\n  return VerticalLine;\n}(Line);\n\nvar Weave = function (_Shape) {\n  inherits(Weave, _Shape);\n\n  function Weave() {\n    classCallCheck(this, Weave);\n    return possibleConstructorReturn(this, (Weave.__proto__ || Object.getPrototypeOf(Weave)).apply(this, arguments));\n  }\n\n  createClass(Weave, [{\n    key: 'drawTile',\n    value: function drawTile() {\n      this._context.beginPath();\n\n      this.setStrokeProps();\n\n      this.drawWeave(0, 0);\n\n      this._context.stroke();\n\n      return this._canvas;\n    }\n  }, {\n    key: 'drawWeave',\n    value: function drawWeave(offsetX, offsetY) {\n      var size = this._size;\n      var halfSize = size / 2;\n\n      this._context.moveTo(offsetX + 1, offsetY + 1);\n      this._context.lineTo(halfSize - 1, halfSize - 1);\n\n      this._context.moveTo(halfSize + 1, size - 1);\n      this._context.lineTo(size - 1, halfSize + 1);\n\n      this._context.closePath();\n    }\n  }]);\n  return Weave;\n}(Shape);\n\nvar Zigzag = function (_Shape) {\n  inherits(Zigzag, _Shape);\n\n  function Zigzag() {\n    classCallCheck(this, Zigzag);\n    return possibleConstructorReturn(this, (Zigzag.__proto__ || Object.getPrototypeOf(Zigzag)).apply(this, arguments));\n  }\n\n  createClass(Zigzag, [{\n    key: 'drawTile',\n    value: function drawTile() {\n      this._context.beginPath();\n\n      this.setStrokeProps();\n\n      this.drawZigzag();\n      this.drawZigzag(this._size / 2);\n\n      this._context.stroke();\n\n      return this._canvas;\n    }\n  }, {\n    key: 'drawZigzag',\n    value: function drawZigzag() {\n      var offsetY = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      var size = this._size;\n      var quarterSize = size / 4;\n      var halfSize = size / 2;\n      var tenthSize = size / 10;\n\n      this._context.moveTo(0, tenthSize + offsetY);\n      this._context.lineTo(quarterSize, halfSize - tenthSize + offsetY);\n      this._context.lineTo(halfSize, tenthSize + offsetY);\n      this._context.lineTo(size - quarterSize, halfSize - tenthSize + offsetY);\n      this._context.lineTo(size, tenthSize + offsetY);\n    }\n  }]);\n  return Zigzag;\n}(Shape);\n\nvar ZigzagVertical = function (_Zigzag) {\n  inherits(ZigzagVertical, _Zigzag);\n\n  function ZigzagVertical() {\n    classCallCheck(this, ZigzagVertical);\n    return possibleConstructorReturn(this, (ZigzagVertical.__proto__ || Object.getPrototypeOf(ZigzagVertical)).apply(this, arguments));\n  }\n\n  createClass(ZigzagVertical, [{\n    key: 'drawTile',\n    value: function drawTile() {\n      this._context.translate(this._size, 0);\n      this._context.rotate(90 * Math.PI / 180);\n\n      Zigzag.prototype.drawTile.call(this);\n\n      return this._canvas;\n    }\n  }]);\n  return ZigzagVertical;\n}(Zigzag);\n\nvar Diagonal = function (_Shape) {\n  inherits(Diagonal, _Shape);\n\n  function Diagonal() {\n    classCallCheck(this, Diagonal);\n    return possibleConstructorReturn(this, (Diagonal.__proto__ || Object.getPrototypeOf(Diagonal)).apply(this, arguments));\n  }\n\n  createClass(Diagonal, [{\n    key: 'drawTile',\n    value: function drawTile() {\n      var halfSize = this._size / 2;\n\n      this._context.beginPath();\n\n      this.setStrokeProps();\n\n      this.drawDiagonalLine();\n      this.drawDiagonalLine(halfSize, halfSize);\n\n      this._context.stroke();\n\n      return this._canvas;\n    }\n  }, {\n    key: 'drawDiagonalLine',\n    value: function drawDiagonalLine() {\n      var offsetX = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      var offsetY = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      var size = this._size;\n      var halfSize = size / 2;\n      var gap = 1;\n\n      this._context.moveTo(halfSize - gap - offsetX, gap * -1 + offsetY);\n      this._context.lineTo(size + 1 - offsetX, halfSize + 1 + offsetY);\n\n      this._context.closePath();\n    }\n  }]);\n  return Diagonal;\n}(Shape);\n\nvar DiagonalRightLeft = function (_Diagonal) {\n  inherits(DiagonalRightLeft, _Diagonal);\n\n  function DiagonalRightLeft() {\n    classCallCheck(this, DiagonalRightLeft);\n    return possibleConstructorReturn(this, (DiagonalRightLeft.__proto__ || Object.getPrototypeOf(DiagonalRightLeft)).apply(this, arguments));\n  }\n\n  createClass(DiagonalRightLeft, [{\n    key: 'drawTile',\n    value: function drawTile() {\n      this._context.translate(this._size, 0);\n      this._context.rotate(90 * Math.PI / 180);\n\n      Diagonal.prototype.drawTile.call(this);\n\n      return this._canvas;\n    }\n  }]);\n  return DiagonalRightLeft;\n}(Diagonal);\n\nvar Square = function (_Shape) {\n  inherits(Square, _Shape);\n\n  function Square() {\n    classCallCheck(this, Square);\n    return possibleConstructorReturn(this, (Square.__proto__ || Object.getPrototypeOf(Square)).apply(this, arguments));\n  }\n\n  createClass(Square, [{\n    key: 'drawTile',\n    value: function drawTile() {\n      var halfSize = this._size / 2;\n\n      this._context.beginPath();\n\n      this.setFillProps();\n\n      this.drawSquare();\n      this.drawSquare(halfSize, halfSize);\n\n      this._context.fill();\n\n      return this._canvas;\n    }\n  }, {\n    key: 'drawSquare',\n    value: function drawSquare() {\n      var offsetX = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      var offsetY = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      var size = this._size;\n      var halfSize = size / 2;\n      var gap = size / 20;\n\n      this._context.fillRect(offsetX + gap, offsetY + gap, halfSize - gap * 2, halfSize - gap * 2);\n\n      this._context.closePath();\n    }\n  }]);\n  return Square;\n}(Shape);\n\nvar Box = function (_Shape) {\n  inherits(Box, _Shape);\n\n  function Box() {\n    classCallCheck(this, Box);\n    return possibleConstructorReturn(this, (Box.__proto__ || Object.getPrototypeOf(Box)).apply(this, arguments));\n  }\n\n  createClass(Box, [{\n    key: 'drawTile',\n    value: function drawTile() {\n      var halfSize = this._size / 2;\n\n      this._context.beginPath();\n\n      this.setStrokeProps();\n\n      this.drawBox();\n      this.drawBox(halfSize, halfSize);\n\n      this._context.stroke();\n\n      return this._canvas;\n    }\n  }, {\n    key: 'drawBox',\n    value: function drawBox() {\n      var offsetX = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      var offsetY = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      var size = this._size;\n      var halfSize = size / 2;\n      var gap = size / 20;\n\n      this._context.strokeRect(offsetX + gap, offsetY + gap, halfSize - gap * 4, halfSize - gap * 4);\n\n      this._context.closePath();\n    }\n  }]);\n  return Box;\n}(Shape);\n\nvar Triangle = function (_Shape) {\n  inherits(Triangle, _Shape);\n\n  function Triangle() {\n    classCallCheck(this, Triangle);\n    return possibleConstructorReturn(this, (Triangle.__proto__ || Object.getPrototypeOf(Triangle)).apply(this, arguments));\n  }\n\n  createClass(Triangle, [{\n    key: 'drawTile',\n    value: function drawTile() {\n      var halfSize = this._size / 2;\n\n      this._context.beginPath();\n\n      this.setFillProps();\n\n      this.drawTriangle();\n      this.drawTriangle(halfSize, halfSize);\n\n      this._context.fill();\n\n      return this._canvas;\n    }\n  }, {\n    key: 'drawTriangle',\n    value: function drawTriangle() {\n      var offsetX = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      var offsetY = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      var size = this._size;\n      var halfSize = size / 2;\n      var quarterSize = size / 4;\n\n      this._context.moveTo(quarterSize + offsetX, offsetY);\n      this._context.lineTo(halfSize + offsetX, halfSize + offsetY);\n      this._context.lineTo(offsetX, halfSize + offsetY);\n\n      this._context.closePath();\n    }\n  }]);\n  return Triangle;\n}(Shape);\n\nvar TriangleVertical = function (_Triangle) {\n  inherits(TriangleVertical, _Triangle);\n\n  function TriangleVertical() {\n    classCallCheck(this, TriangleVertical);\n    return possibleConstructorReturn(this, (TriangleVertical.__proto__ || Object.getPrototypeOf(TriangleVertical)).apply(this, arguments));\n  }\n\n  createClass(TriangleVertical, [{\n    key: 'drawTile',\n    value: function drawTile() {\n      var size = this._size;\n\n      this._context.translate(size, size);\n      this._context.rotate(180 * Math.PI / 180);\n\n      Triangle.prototype.drawTile.call(this);\n\n      return this._canvas;\n    }\n  }]);\n  return TriangleVertical;\n}(Triangle);\n\nvar Diamond = function (_Shape) {\n  inherits(Diamond, _Shape);\n\n  function Diamond() {\n    classCallCheck(this, Diamond);\n    return possibleConstructorReturn(this, (Diamond.__proto__ || Object.getPrototypeOf(Diamond)).apply(this, arguments));\n  }\n\n  createClass(Diamond, [{\n    key: 'drawTile',\n    value: function drawTile() {\n      var halfSize = this._size / 2;\n\n      this._context.beginPath();\n\n      this.setFillProps();\n\n      this.drawDiamond();\n      this.drawDiamond(halfSize, halfSize);\n\n      this._context.fill();\n\n      return this._canvas;\n    }\n  }, {\n    key: 'drawDiamond',\n    value: function drawDiamond() {\n      var offsetX = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      var offsetY = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      var size = this._size;\n      var halfSize = size / 2;\n      var quarterSize = size / 4;\n\n      this._context.moveTo(quarterSize + offsetX, offsetY);\n      this._context.lineTo(halfSize + offsetX, quarterSize + offsetY);\n      this._context.lineTo(quarterSize + offsetX, halfSize + offsetY);\n      this._context.lineTo(offsetX, quarterSize + offsetY);\n\n      this._context.closePath();\n    }\n  }]);\n  return Diamond;\n}(Shape);\n\nvar DiamondBox = function (_Diamond) {\n  inherits(DiamondBox, _Diamond);\n\n  function DiamondBox() {\n    classCallCheck(this, DiamondBox);\n    return possibleConstructorReturn(this, (DiamondBox.__proto__ || Object.getPrototypeOf(DiamondBox)).apply(this, arguments));\n  }\n\n  createClass(DiamondBox, [{\n    key: 'drawTile',\n    value: function drawTile() {\n      var halfSize = this._size / 2;\n\n      this._context.beginPath();\n\n      this.setStrokeProps();\n\n      this.drawDiamond();\n      this.drawDiamond(halfSize, halfSize);\n\n      this._context.stroke();\n\n      return this._canvas;\n    }\n  }, {\n    key: 'drawDiamond',\n    value: function drawDiamond() {\n      var offsetX = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      var offsetY = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      var size = this._size;\n      var halfSize = size / 2 - 1;\n      var quarterSize = size / 4;\n\n      this._context.moveTo(quarterSize + offsetX, offsetY + 1);\n      this._context.lineTo(halfSize + offsetX, quarterSize + offsetY);\n      this._context.lineTo(quarterSize + offsetX, halfSize + offsetY);\n      this._context.lineTo(offsetX + 1, quarterSize + offsetY);\n\n      this._context.closePath();\n    }\n  }]);\n  return DiamondBox;\n}(Diamond);\n\nvar shapes = {\n  'plus': Plus,\n  'cross': Cross,\n  'dash': Dash,\n  'cross-dash': CrossDash,\n  'dot': Dot,\n  'dot-dash': DotDash,\n  'disc': Disc,\n  'ring': Ring,\n  'line': Line,\n  'line-vertical': VerticalLine,\n  'weave': Weave,\n  'zigzag': Zigzag,\n  'zigzag-vertical': ZigzagVertical,\n  'diagonal': Diagonal,\n  'diagonal-right-left': DiagonalRightLeft,\n  'square': Square,\n  'box': Box,\n  'triangle': Triangle,\n  'triangle-inverted': TriangleVertical,\n  'diamond': Diamond,\n  'diamond-box': DiamondBox\n};\n\nvar deprecatedShapes = {\n  'circle': shapes['disc'],\n  'triangle-vertical': shapes['triangle-inverted'],\n  'line-horizontal': shapes['line'],\n  'line-diagonal-lr': shapes['diagonal'],\n  'line-diagonal-rl': shapes['diagonal-right-left'],\n  'zigzag-horizontal': shapes['zigzag'],\n  'diamond-outline': shapes['diamond-box']\n};\n\nvar completeShapesList = [];\n\nfunction getRandomShape() {\n  var excludedShapeTypes = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n  var shapesList = Object.keys(shapes);\n\n  excludedShapeTypes.forEach(function (shapeType) {\n    shapesList.splice(shapesList.indexOf(shapeType), 1);\n  });\n\n  var randomIndex = Math.floor(Math.random() * shapesList.length);\n\n  return shapesList[randomIndex];\n}\n\n_extends(completeShapesList, shapes, deprecatedShapes);\n\nfunction draw() {\n  var shapeType = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'square';\n  var backgroundColor = arguments[1];\n  var patternColor = arguments[2];\n  var size = arguments[3];\n\n  var patternCanvas = document.createElement('canvas');\n  var patternContext = patternCanvas.getContext('2d');\n  var outerSize = size * 2;\n\n  var Shape = completeShapesList[shapeType];\n  var shape = new Shape(size, backgroundColor, patternColor);\n\n  var pattern = patternContext.createPattern(shape.drawTile(), 'repeat');\n\n  patternCanvas.width = outerSize;\n  patternCanvas.height = outerSize;\n\n  pattern.shapeType = shapeType;\n\n  return pattern;\n}\n\nfunction generate(colorList) {\n  var firstShapeType = void 0;\n  var previousShapeType = void 0;\n\n  return colorList.map(function (color, index, list) {\n    var shapeType = void 0;\n\n    if (index === 0) {\n      shapeType = getRandomShape();\n      previousShapeType = shapeType;\n      firstShapeType = previousShapeType;\n    } else if (index === list.length - 1) {\n      shapeType = getRandomShape([previousShapeType, firstShapeType]);\n    } else {\n      shapeType = getRandomShape([previousShapeType]);\n      previousShapeType = shapeType;\n    }\n\n    return draw(shapeType, color);\n  });\n}\n\nvar pattern = {\n  draw: draw,\n  generate: generate\n};\n\nreturn pattern;\n\n})));\n//# sourceMappingURL=patternomaly.js.map\n"],"sourceRoot":""}